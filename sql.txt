1.Query all columns for all American cities in CITY with populations larger than 100000. The CountryCode for America is USA.
--select * from city where population>100000 and countrycode='USA';

2.Query the names of all American cities in CITY with populations larger than 120000. The CountryCode for America is USA.
--select name from city where population>120000 and countrycode='USA';

3.Query all columns (attributes) for every row in the CITY table.
--select * from city;

4.Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
select distinct city  from station  where substr(city,1,1) not in ('A','E','I','O','U','a','e','i','o','u') or  substr(city,-1,1) not in ('A','E','I','O','U','a','e','i','o','u');

5.Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

--(select city, length(city) from station where length(city)=(select max(length(city)) from station ) order by length(city),city limit 1 )
union
(select city, length(city) from station where length(city)=(select min(length(city)) from station )  order by length(city),city limit 1 )

6.Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

--Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.

7.Query a list of CITY names from STATION with even ID numbers only. You may print the results in any order, but must exclude duplicates from your answer.

-- select distinct city  from station where mod(id,2)=0
MOD function is used for finding the remainder.

